{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","addGood","good","setState","removeGood","filter","elem","clearGoods","this","length","slice","join","className","displaySelectedGoods","map","isGoodSelected","find","classNames","type","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qQAMMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOWC,EAAb,4MACEC,MAAQ,CACNC,cAAe,IAFnB,EAKEC,QAAU,SAACC,GACT,EAAKC,UAAS,SAACJ,GACb,MAAO,CACLC,cAAc,GAAD,mBAAMD,EAAMC,eAAZ,CAA2BE,SARhD,EAaEE,WAAa,SAACF,GACZ,EAAKC,UAAS,SAACJ,GACb,MAAO,CACLC,cAAeD,EAAMC,cAAcK,QAAO,SAAAC,GAAI,OAAIA,IAASJ,UAhBnE,EAqBEK,WAAa,WACX,EAAKJ,SAAS,CAAEH,cAAe,MAtBnC,0DAyBE,WACE,IAAQA,EAAkBQ,KAAKT,MAAvBC,cAER,OAAQA,EAAcS,QACpB,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUT,EAAc,GAAxB,gBACF,QACE,MAAM,GAAN,OAAUA,EAAcU,MAAM,GAAI,GAAGC,KAAK,MAA1C,gBAAuDX,EAAcU,OAAO,GAA5E,oBAlCR,oBAsCE,WAAU,IAAD,OACCV,EAAkBQ,KAAKT,MAAvBC,cAER,OACE,sBAAKY,UAAU,MAAf,UACE,6BAAKJ,KAAKK,yBACV,oBAAID,UAAU,OAAd,SACGf,EAAgBiB,KAAI,SAAAZ,GACnB,IAAMa,EAAiBf,EAAcgB,MAAM,SAAAV,GAAI,OAAIA,IAASJ,KAE5D,OACE,qBACEU,UAAWK,IAAW,aAAc,CAClC,uBAAwBF,IAF5B,UAMGb,EAED,wBACEU,UAAWK,IAAW,OACtBC,KAAK,SACLC,QAASJ,EACL,kBAAM,EAAKX,WAAWF,IACtB,kBAAM,EAAKD,QAAQC,IALzB,SAOGa,EAAiB,SAAW,UAX1Bb,UAiBVF,EAAcS,QACf,wBACEG,UAAU,MACVM,KAAK,SACLC,QAASX,KAAKD,WAHhB,yCAvEV,GAAyBa,IAAMC,WCpB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8a855739.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\n// import classNames from 'classnames';\n\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface State {\n  selectedGoods: string[]\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: [],\n  };\n\n  addGood = (good: string) => {\n    this.setState((state) => {\n      return {\n        selectedGoods: [...state.selectedGoods, good],\n      };\n    });\n  };\n\n  removeGood = (good: string) => {\n    this.setState((state) => {\n      return {\n        selectedGoods: state.selectedGoods.filter(elem => elem !== good),\n      };\n    });\n  };\n\n  clearGoods = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  displaySelectedGoods() {\n    const { selectedGoods } = this.state;\n\n    switch (selectedGoods.length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${selectedGoods[0]} is selected`;\n      default:\n        return `${selectedGoods.slice(0, -1).join(', ')} and ${selectedGoods.slice(-1)} are selected`;\n    }\n  }\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>{this.displaySelectedGoods()}</h1>\n        <ul className=\"list\">\n          {goodsFromServer.map(good => {\n            const isGoodSelected = selectedGoods.find((elem => elem === good));\n\n            return (\n              <li\n                className={classNames('list__item', {\n                  'list__item--selected': isGoodSelected,\n                })}\n                key={good}\n              >\n                {good}\n\n                <button\n                  className={classNames('btn')}\n                  type=\"button\"\n                  onClick={isGoodSelected\n                    ? () => this.removeGood(good)\n                    : () => this.addGood(good)}\n                >\n                  {isGoodSelected ? 'Remove' : 'Add'}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n        {!!selectedGoods.length && (\n          <button\n            className=\"btn\"\n            type=\"button\"\n            onClick={this.clearGoods}\n          >\n            Clear Selected Goods\n          </button>\n        )}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}